diff --git a/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java b/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java
index fcedd69..a94b543 100644
--- a/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java
+++ b/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java
@@ -179,7 +179,7 @@ public class JavaCamelJobScriptsExportWSAction implements IRunnableWithProgress
         String displayName = referencedJobNode.getObject().getProperty().getDisplayName();
         String filePath = getTempDir() + displayName + '-' + jobVersion + FileConstants.JAR_FILE_SUFFIX;
         if (processReferencedJob(filePath, referencedJobNode, jobVersion)) {
-            exportOsgiBundle(referencedJobNode, filePath, jobVersion, jobVersion, "Job");
+            exportOsgiBundle(referencedJobNode, filePath, jobVersion, jobVersion, "Job", true);
         }
 
     }
@@ -192,15 +192,22 @@ public class JavaCamelJobScriptsExportWSAction implements IRunnableWithProgress
             }
         }
         return null;
-    }
+    }
+
+     protected void exportOsgiBundle(RepositoryNode node, String filePath, String version, String bundleVersion, String itemType)
+             throws InvocationTargetException, InterruptedException {
+     	exportOsgiBundle(node, filePath, version, bundleVersion, itemType, false);
+     }
 
-    protected void exportOsgiBundle(RepositoryNode node, String filePath, String version, String bundleVersion, String itemType)
-            throws InvocationTargetException, InterruptedException {
+     //patch for TESB-12909
+     protected void exportOsgiBundle(RepositoryNode node, String filePath, String version, String bundleVersion, String itemType, boolean isRefJobBycTalendJob)
+             throws InvocationTargetException, InterruptedException {
         JobJavaScriptOSGIForESBManager talendJobManager = new JobJavaScriptOSGIForESBManager(getExportChoice(), null, null,
                 IProcessor.NO_STATISTICS, IProcessor.NO_TRACES);
         talendJobManager.setBundleVersion(bundleVersion);
         talendJobManager.setMultiNodes(false);
-        talendJobManager.setDestinationPath(filePath);
+        talendJobManager.setDestinationPath(filePath);
+        talendJobManager.setIsRefJobByCTalendJob(isRefJobBycTalendJob);
         JobExportAction action = new JobExportAction(Collections.singletonList(node), version, bundleVersion, talendJobManager,
                 getTempDir(), itemType);
         action.run(monitor);
diff --git a/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java b/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java
index eeba9ff..346639c 100644
--- a/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java
+++ b/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java
@@ -22,7 +22,6 @@ import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.talend.commons.exception.PersistenceException;
 import org.talend.core.model.repository.ERepositoryObjectType;
 import org.talend.core.model.repository.IRepositoryViewObject;
-import org.talend.core.model.utils.JavaResourcesHelper;
 import org.talend.core.repository.constants.FileConstants;
 import org.talend.core.repository.model.ProxyRepositoryFactory;
 import org.talend.designer.publish.core.models.BundleModel;
@@ -104,7 +103,8 @@ public class ExportServiceAction implements IRunnableWithProgress {
                         if(jobNode==null) {
                         	continue;
                         }
-                        operations.put(operationName, JavaResourcesHelper.getJobClassName(jobNode));
+                         String jobName = jobNode.getObject().getLabel();
+                         operations.put(operationName, jobName);
                         nodes.add(jobNode);
                     }
                 }
