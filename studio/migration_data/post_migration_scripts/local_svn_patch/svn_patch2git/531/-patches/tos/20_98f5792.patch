diff --git a/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java b/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java
index fcedd69..63a0249 100644
--- a/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java
+++ b/org.talend.camel.designer/src/main/java/org/talend/camel/designer/ui/wizards/actions/JavaCamelJobScriptsExportWSAction.java
@@ -179,7 +179,7 @@ public class JavaCamelJobScriptsExportWSAction implements IRunnableWithProgress
         String displayName = referencedJobNode.getObject().getProperty().getDisplayName();
         String filePath = getTempDir() + displayName + '-' + jobVersion + FileConstants.JAR_FILE_SUFFIX;
         if (processReferencedJob(filePath, referencedJobNode, jobVersion)) {
-            exportOsgiBundle(referencedJobNode, filePath, jobVersion, jobVersion, "Job");
+            exportOsgiBundle(referencedJobNode, filePath, jobVersion, jobVersion, "Job", true);
         }
 
     }
@@ -196,11 +196,18 @@ public class JavaCamelJobScriptsExportWSAction implements IRunnableWithProgress
 
     protected void exportOsgiBundle(RepositoryNode node, String filePath, String version, String bundleVersion, String itemType)
             throws InvocationTargetException, InterruptedException {
+    	exportOsgiBundle(node, filePath, version, bundleVersion, itemType, false);
+    }
+    
+    //patch for TESB-12909
+    protected void exportOsgiBundle(RepositoryNode node, String filePath, String version, String bundleVersion, String itemType, boolean isRefJobBycTalendJob)
+            throws InvocationTargetException, InterruptedException {
         JobJavaScriptOSGIForESBManager talendJobManager = new JobJavaScriptOSGIForESBManager(getExportChoice(), null, null,
                 IProcessor.NO_STATISTICS, IProcessor.NO_TRACES);
         talendJobManager.setBundleVersion(bundleVersion);
         talendJobManager.setMultiNodes(false);
         talendJobManager.setDestinationPath(filePath);
+        talendJobManager.setIsRefJobByCTalendJob(isRefJobBycTalendJob);
         JobExportAction action = new JobExportAction(Collections.singletonList(node), version, bundleVersion, talendJobManager,
                 getTempDir(), itemType);
         action.run(monitor);
diff --git a/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java b/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java
index fd06d45..b7f0652 100644
--- a/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java
+++ b/org.talend.repository.services/src/org/talend/repository/services/ui/action/ExportServiceAction.java
@@ -22,7 +22,6 @@ import org.eclipse.jface.operation.IRunnableWithProgress;
 import org.talend.commons.exception.PersistenceException;
 import org.talend.core.model.repository.ERepositoryObjectType;
 import org.talend.core.model.repository.IRepositoryViewObject;
-import org.talend.core.model.utils.JavaResourcesHelper;
 import org.talend.core.repository.constants.FileConstants;
 import org.talend.core.repository.model.ProxyRepositoryFactory;
 import org.talend.designer.publish.core.models.BundleModel;
@@ -104,7 +103,8 @@ public class ExportServiceAction implements IRunnableWithProgress {
                         if(jobNode==null) {
                         	continue;
                         }
-                        operations.put(operationName, JavaResourcesHelper.getJobClassName(jobNode));
+                        String jobName = jobNode.getObject().getLabel();
+                        operations.put(operationName, jobName);
                         nodes.add(jobNode);
                     }
                 }
diff --git a/org.talend.repository/resources/job-rest-template.xml b/org.talend.repository/resources/job-rest-template.xml
index 5a11985..cba466a 100644
--- a/org.talend.repository/resources/job-rest-template.xml
+++ b/org.talend.repository/resources/job-rest-template.xml
@@ -84,7 +84,7 @@
 			<value>routines.system.api.TalendJob</value>
 		</interfaces>
 		<service-properties>
-			<entry key="name" value="${endpoint.jobClassName}" />
+			<entry key="name" value="${endpoint.jobName}" />
 			<entry key="type" value="job" />
 		</service-properties>
 	</service>
diff --git a/org.talend.repository/resources/job-template.xml b/org.talend.repository/resources/job-template.xml
index 840be93..2e84315 100644
--- a/org.talend.repository/resources/job-template.xml
+++ b/org.talend.repository/resources/job-template.xml
@@ -36,7 +36,7 @@
 #end
 		</interfaces>
 		<service-properties>
-			<entry key="name" value="${job.className}" />
+			<entry key="name" value="${job.name}" />
 			<entry key="type" value="job" />
 #if ($job.isESBJobFactory)
 			<entry key="multithreading" value="true" />
diff --git a/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/exportjob/scriptsmanager/esb/JobJavaScriptOSGIForESBManager.java b/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/exportjob/scriptsmanager/esb/JobJavaScriptOSGIForESBManager.java
index 3839d72..c4b91a7 100644
--- a/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/exportjob/scriptsmanager/esb/JobJavaScriptOSGIForESBManager.java
+++ b/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/exportjob/scriptsmanager/esb/JobJavaScriptOSGIForESBManager.java
@@ -12,10 +12,6 @@
 // ============================================================================
 package org.talend.repository.ui.wizards.exportjob.scriptsmanager.esb;
 
-import aQute.bnd.osgi.Analyzer;
-import aQute.bnd.osgi.FileResource;
-import aQute.bnd.osgi.Jar;
-
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
@@ -87,6 +83,10 @@ import org.talend.repository.ui.wizards.exportjob.scriptsmanager.JobJavaScriptsM
 import org.talend.repository.utils.EmfModelUtils;
 import org.talend.repository.utils.TemplateProcessor;
 
+import aQute.bnd.osgi.Analyzer;
+import aQute.bnd.osgi.FileResource;
+import aQute.bnd.osgi.Jar;
+
 /**
  * DOC ycbai class global comment. Detailled comment
  */
@@ -114,6 +114,9 @@ public class JobJavaScriptOSGIForESBManager extends JobJavaScriptsManager {
     private String itemType = null;
 
     private final File classesLocation = new File(getTmpFolder() + File.separator + "classes"); //$NON-NLS-1$;
+    
+    //patch for TESB-12909
+	private boolean isRefJobBycTalendJob = false;
 
     @Override
     public List<ExportFileResource> getExportResources(ExportFileResource[] processes, String... codeOptions)
@@ -146,7 +149,7 @@ public class JobJavaScriptOSGIForESBManager extends JobJavaScriptsManager {
                 }
                 itemToBeExport.add(processItem);
                 jobName = processItem.getProperty().getLabel();
-                jobClassName = JavaResourcesHelper.getJobClassName(processItem);
+                jobClassName = getPackageName(processItem) + PACKAGE_SEPARATOR + jobName;
 
                 String jobVersion = processItem.getProperty().getVersion();
                 if (!isMultiNodes() && getSelectedJobVersion() != null) {
@@ -414,6 +417,13 @@ public class JobJavaScriptOSGIForESBManager extends JobJavaScriptsManager {
         return EmfModelUtils.getComponentByName(processItem, "tRESTRequest");
     }
 
+    private static String getPackageName(ProcessItem processItem) {
+        return JavaResourcesHelper.getProjectFolderName(processItem)
+                + PACKAGE_SEPARATOR
+                + JavaResourcesHelper.getJobFolderName(processItem.getProperty().getLabel(), processItem.getProperty()
+                        .getVersion());
+    }
+
     private boolean isRoute() {
         return ROUTE.equals(itemType);
     }
@@ -582,6 +592,11 @@ public class JobJavaScriptOSGIForESBManager extends JobJavaScriptsManager {
         // job OSGi DataSources
         jobInfo.put("dataSources", DataSourceConfig.getAliases(processItem)); //$NON-NLS-1$
 
+        //patch for TESB-12909
+        if(isRefJobBycTalendJob && null != EmfModelUtils.getComponentByName(processItem, "tRouteInput")){
+        	 jobInfo.put("name", jobClassName); //$NON-NLS-1$
+        }
+        
         // velocity template context
         Map<String, Object> contextParams = new HashMap<String, Object>();
         contextParams.put("job", jobInfo); //$NON-NLS-1$
@@ -718,7 +733,7 @@ public class JobJavaScriptOSGIForESBManager extends JobJavaScriptsManager {
         String requireBundle = ""; //$NON-NLS-1$
         String delim = ""; //$NON-NLS-1$
         for (ProcessItem pi : itemToBeExport) {
-        	exportPackage.append(delim).append(JavaResourcesHelper.getJobClassPackageName(pi));
+            exportPackage.append(delim).append(getPackageName(pi));
             delim = ","; //$NON-NLS-1$
             // Add Route Resource Export packages
             // http://jira.talendforge.org/browse/TESB-6227
@@ -1026,4 +1041,8 @@ public class JobJavaScriptOSGIForESBManager extends JobJavaScriptsManager {
         }
         return providedModulesSet;
     }
+
+	public void setIsRefJobByCTalendJob(boolean isRefJobBycTalendJob) {
+		this.isRefJobBycTalendJob = isRefJobBycTalendJob;
+	}
 }
